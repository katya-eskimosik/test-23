name: Python CI with Detailed Test Reports

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test-and-notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -e .

      - name: Run tests and capture failures
        id: pytest
        run: |
          # Запускаем тесты и сохраняем вывод
          pytest --verbose > pytest_output.log 2>&1
          TEST_STATUS=$?
          
          # Извлекаем только названия упавших тестов
          FAILED_TESTS=$(grep -E 'FAILED|ERROR' pytest_output.log | awk -F'::' '{print $2}' | awk '{print $1}' | sort | uniq)
          
          # Сохраняем результаты
          echo "status=$TEST_STATUS" >> $GITHUB_OUTPUT
          echo "failed_tests<<EOF" >> $GITHUB_OUTPUT
          echo "$FAILED_TESTS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Отладочная информация
          echo "Test status: $TEST_STATUS"
          echo "Failed tests:"
          echo "$FAILED_TESTS"
          echo "Full output:"
          cat pytest_output.log
          
          exit $TEST_STATUS

      - name: Prepare Telegram message
        id: prepare_message
        run: |
          if [ "${{ steps.pytest.outputs.status }}" == "0" ]; then
            MESSAGE="✅ Все тесты прошли успешно"
          else
            MESSAGE="❌ Упавшие тесты:\n\`\`\`\n${{ steps.pytest.outputs.failed_tests }}\n\`\`\`"
          fi
          
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Telegram notification
        uses: appleboy/telegram-action@v1.0.0
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: ${{ steps.prepare_message.outputs.message }}
          format: "Markdown"
        if: always()
